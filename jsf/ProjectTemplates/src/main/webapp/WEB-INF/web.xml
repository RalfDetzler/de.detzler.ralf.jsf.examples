<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>Project Template</display-name>
	<welcome-file-list>
		<welcome-file>index.jsf</welcome-file>
	</welcome-file-list>

	<context-param>
		<description>
                Comma separated list of URIs of additional faces config files.
                (e.g. /WEB-INF/my-config.xml) Attention: /WEB-INF/faces.config.xml is added automatically.
                See JSF 1.0 PRD2, 10.3.2
                </description>
		<param-name>javax.faces.application.CONFIG_FILES</param-name>
		<param-value>
                </param-value>
	</context-param>

	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>

	<context-param>
		<description>
                This parameter tells MyFaces if javascript code should be allowed in the
                rendered HTML output.
                If javascript is allowed, command_link anchors will have javascript code
                that submits the corresponding form.
                If javascript is not allowed, the state saving info and nested parameters
                will be added as url parameters.
                Default: &quot;true&quot; </description>
		<param-name>myfaces_allow_javascript</param-name>
		<param-value>true</param-value>
	</context-param>

	<context-param>
		<description>
                If true, rendered HTML code will be formatted, so that it is &quot;human readable&quot;.
                i.e. additional line separators and whitespace will be written, that do not
                influence the HTML code.
                Default: &quot;true&quot; </description>
		<param-name>myfaces_pretty_html</param-name>
		<param-value>true</param-value>
	</context-param>

	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
		<url-pattern>*.xhtml</url-pattern>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>

	<!-- This is an optional parameter, but it makes troubleshooting errors 
		much easier -->
	<!-- You are advised to delete this context parameter before a production 
		deployment -->
	<context-param>
		<param-name>facelets.DEVELOPMENT</param-name>
		<param-value>true</param-value>
	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.EXPRESSION_FACTORY</param-name>
		<param-value>com.sun.el.ExpressionFactoryImpl</param-value>
	</context-param>
	<context-param>
		<param-name>com.sun.faces.expressionFactory</param-name>
		<param-value>com.sun.el.ExpressionFactoryImpl</param-value>
	</context-param>

</web-app>